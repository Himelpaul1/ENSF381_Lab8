{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'https://dummyjson.com/products';\n\n// Fetches a list of all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(BASE_URL);\n    return response.data;\n  } catch (error) {\n    throw error; // Rethrow to allow caller to handle\n  }\n};\n\n// Fetches details for a single product by its ID\nexport const getProductDetails = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error; // Rethrow to allow caller to handle\n  }\n};\n\n// Deletes a product by its ID\nexport const removeProduct = async id => {\n  try {\n    const response = await axios.delete(`${BASE_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error; // Rethrow to allow caller to handle\n  }\n};\n\n// Adds a new product to the database\nexport const addProduct = product => {\n  return axios.post(`${BASE_URL}/add`, JSON.stringify(product));\n};\n\n// Edits an existing product by ID\nexport const editProduct = (id, product) => {\n  // implement it using similar logic as addProduct function but use axios.put method\n  return axios.put(`${BASE_URL}/${id}`, JSON.stringify(product));\n};","map":{"version":3,"names":["axios","BASE_URL","fetchProducts","response","get","data","error","getProductDetails","id","removeProduct","delete","addProduct","product","post","JSON","stringify","editProduct","put"],"sources":["S:/Winter24/ENSF381/Lab8/ENSF381_Lab8/products-app/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://dummyjson.com/products';\r\n\r\n// Fetches a list of all products\r\nexport const fetchProducts = async () => {\r\n    try {\r\n        const response = await axios.get(BASE_URL);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error; // Rethrow to allow caller to handle\r\n    }\r\n};\r\n\r\n// Fetches details for a single product by its ID\r\nexport const getProductDetails = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error; // Rethrow to allow caller to handle\r\n    }\r\n};\r\n\r\n// Deletes a product by its ID\r\nexport const removeProduct = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`${BASE_URL}/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error; // Rethrow to allow caller to handle\r\n    }\r\n};\r\n\r\n// Adds a new product to the database\r\nexport const addProduct = (product) => {\r\n    return axios.post(`${BASE_URL}/add`, JSON.stringify(product));\r\n};\r\n\r\n// Edits an existing product by ID\r\nexport const editProduct = (id, product) => {\r\n    // implement it using similar logic as addProduct function but use axios.put method\r\n    return axios.put(`${BASE_URL}/${id}`, JSON.stringify(product));\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,gCAAgC;;AAEjD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,QAAQ,CAAC;IAC1C,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,QAAS,IAAGO,EAAG,EAAC,CAAC;IACrD,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOD,EAAE,IAAK;EACvC,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACU,MAAM,CAAE,GAAET,QAAS,IAAGO,EAAG,EAAC,CAAC;IACxD,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAIC,OAAO,IAAK;EACnC,OAAOZ,KAAK,CAACa,IAAI,CAAE,GAAEZ,QAAS,MAAK,EAAEa,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;AACjE,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CAACR,EAAE,EAAEI,OAAO,KAAK;EACxC;EACA,OAAOZ,KAAK,CAACiB,GAAG,CAAE,GAAEhB,QAAS,IAAGO,EAAG,EAAC,EAAEM,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;AAClE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}